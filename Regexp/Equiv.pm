package ShiftJIS::Regexp::Equiv;
use strict;
use Carp;

use vars qw($VERSION @ISA @EXPORT @EXPORT_OK);
$VERSION = '1.00';

require Exporter;
@ISA       = qw(Exporter);
@EXPORT    = qw();
@EXPORT_OK = qw(%Eq);

use vars qw(%Eq);

my $Open = 5.005 > $] ? '(?:' : '(?-i:';
my $Close = ')';

foreach(
['!', 'ÅI'],
['#', 'Åî'],
['$', 'Åê'],
['%', 'Åì'],
['&', 'Åï'],
['(', 'Åi'],
[')', 'Åj'],
['*', 'Åñ'],
['+', 'Å{'],
[',', 'ÅC'],
['.', 'ÅD'],
['/', 'Å^'],
['0', 'ÇO'],
['1', 'ÇP'],
['2', 'ÇQ'],
['3', 'ÇR'],
['4', 'ÇS'],
['5', 'ÇT'],
['6', 'ÇU'],
['7', 'ÇV'],
['8', 'ÇW'],
['9', 'ÇX'],
[':', 'ÅF'],
[';', 'ÅG'],
['<', 'ÅÉ'],
['=', 'ÅÅ'],
['>', 'ÅÑ'],
['?', 'ÅH'],
['@', 'Åó'],
['[', 'Åm'],
['\\','Åè'],
[']', 'Ån'],
['^', 'ÅO'],
['_', 'ÅQ'],
['`', 'ÅM'],
['{', 'Åo'],
['|', 'Åb'],
['}', 'Åp'],
['~', 'ÅP'],
['ÅB', '°'],
['Åu', '¢'],
['Åv', '£'],
['ÅA', '§'],
['ÅE', '•'],
['Å[', '∞'],
['a', 'ÇÅ', 'A', 'Ç`'],
['b', 'ÇÇ', 'B', 'Ça'],
['c', 'ÇÉ', 'C', 'Çb'],
['d', 'ÇÑ', 'D', 'Çc'],
['e', 'ÇÖ', 'E', 'Çd'],
['f', 'ÇÜ', 'F', 'Çe'],
['g', 'Çá', 'G', 'Çf'],
['h', 'Çà', 'H', 'Çg'],
['i', 'Çâ', 'I', 'Çh'],
['j', 'Çä', 'J', 'Çi'],
['k', 'Çã', 'K', 'Çj'],
['l', 'Çå', 'L', 'Çk'],
['m', 'Çç', 'M', 'Çl'],
['n', 'Çé', 'N', 'Çm'],
['o', 'Çè', 'O', 'Çn'],
['p', 'Çê', 'P', 'Ço'],
['q', 'Çë', 'Q', 'Çp'],
['r', 'Çí', 'R', 'Çq'],
['s', 'Çì', 'S', 'Çr'],
['t', 'Çî', 'T', 'Çs'],
['u', 'Çï', 'U', 'Çt'],
['v', 'Çñ', 'V', 'Çu'],
['w', 'Çó', 'W', 'Çv'],
['x', 'Çò', 'X', 'Çw'],
['y', 'Çô', 'Y', 'Çx'],
['z', 'Çö', 'Z', 'Çy'],
[qw/Çü É@ ß Ç† ÉA ± /],
[qw/Ç° ÉB ® Ç¢ ÉC ≤ /],
[qw/Ç£ ÉD © Ç§ ÉE Éî ≥ﬁ ≥ /],
[qw/Ç• ÉF ™ Ç¶ ÉG ¥ /],
[qw/Çß ÉH ´ Ç® ÉI µ /],
[qw/Ç™ ÉK ∂ﬁ Ç© ÉJ ∂ Éï/],
[qw/Ç¨ ÉM ∑ﬁ Ç´ ÉL ∑ /],
[qw/ÇÆ ÉO ∏ﬁ Ç≠ ÉN ∏ /],
[qw/Ç∞ ÉQ πﬁ ÇØ ÉP π Éñ /],
[qw/Ç≤ ÉS ∫ﬁ Ç± ÉR ∫ /],
[qw/Ç¥ ÉU ªﬁ Ç≥ ÉT ª /],
[qw/Ç∂ ÉW ºﬁ Çµ ÉV º /],
[qw/Ç∏ ÉY Ωﬁ Ç∑ ÉX Ω /],
[qw/Ç∫ É[ æﬁ Çπ ÉZ æ /],
[qw/Çº É] øﬁ Çª É\ ø /],
[qw/Çæ É_ ¿ﬁ ÇΩ É^ ¿ /],
[qw/Ç¿ Éa ¡ﬁ Çø É` ¡ /],
[qw/Ç√ Éd ¬ﬁ Ç¬ Éc ¬ Ç¡ Éb Ø/],
[qw/Ç≈ Éf √ﬁ Çƒ Ée √ /],
[qw/Ç« Éh ƒﬁ Ç∆ Ég ƒ /],
[qw/Ç» Éi ≈ /],
[qw/Ç… Éj ∆ /],
[qw/Ç  Ék « /],
[qw/ÇÀ Él » /],
[qw/ÇÃ Ém … /],
[qw/ÇŒ Éo  ﬁ Çœ Ép  ﬂ ÇÕ Én   /],
[qw/Ç— Ér Àﬁ Ç“ És Àﬂ Ç– Éq À /],
[qw/Ç‘ Éu Ãﬁ Ç’ Év Ãﬂ Ç” Ét Ã /],
[qw/Ç◊ Éx Õﬁ Çÿ Éy Õﬂ Ç÷ Éw Õ /],
[qw/Ç⁄ É{ Œﬁ Ç€ É| Œﬂ ÇŸ Éz Œ /],
[qw/Ç‹ É} œ /],
[qw/Ç› É~ – /],
[qw/Çﬁ ÉÄ — /],
[qw/Çﬂ ÉÅ “ /],
[qw/Ç‡ ÉÇ ” /],
[qw/Ç· ÉÉ ¨ Ç‚ ÉÑ ‘ /],
[qw/Ç„ ÉÖ ≠ Ç‰ ÉÜ ’ /],
[qw/ÇÂ Éá Æ ÇÊ Éà ÷ /],
[qw/ÇÁ Éâ ◊ /],
[qw/ÇË Éä ÿ /],
[qw/ÇÈ Éã Ÿ /],
[qw/ÇÍ Éå ⁄ /],
[qw/ÇÎ Éç € /],
[qw/ÇÌ Éè ‹ ÇÏ Éé /],
[qw/ÇÓ Éê /],
[qw/ÇÔ Éë /],
[qw/Ç Éí ¶ /],
[qw/ÇÒ Éì › /],
[qw/ÅT ÅR ÅU ÅS /],
[qw/ÅJ ÅK ﬁ  ﬂ  /],
) {
    my $arr = $_;
    my $re = $Open.join('|', map {
	length($_) == 1
	    ? sprintf('\x%02x', ord $_)
	    : sprintf('\x%02x\x%02x', unpack 'C2', $_)
	} @$arr) .$Close;
    @Eq{@$arr} = ($re) x @$arr;
}

1;
__END__
